# File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig

# Created by https://www.toptal.com/developers/gitignore/api/visualstudiocode,macos,terraform
# Edit at https://www.toptal.com/developers/gitignore?templates=visualstudiocode,macos,terraform

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

### VisualStudioCode ###
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# End of https://www.toptal.com/developers/gitignore/api/visualstudiocode,macos,terraform

# Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option)

terraform.tfvars
updatedplan


# Ignore installers
*.ps1
*.exe
*.nupkg
*.msi
*.dmg

# Keep the keys directory.
keys/**
!keys/.keep

# Add the scripts
!scripts/*.ps1
# Keep the gorilla executable. Latest can be downloaded from https://github.com/1dustindavis/gorilla/releases
# Current release: 1.0.0.5
# Note: Why should we bundle a specific version with repository than always resolve to latest version via scripts? 
# - Gorilla seems to be coming out on beta releases so we should probably stick with the gorilla binaries tested during development.
!files/gorilla-*.exe
# Custom cache directory.
.cache

files/munki-repository/*